
# <1>
定义一个二维整形数组并初始化：

vector<vector<int> > array(m); //这个m一定不能少
//初始化一个m*n的二维数组
for(int i=0;i<m;i++) {
    array[i].resize(n);
}


测试代码：

#include<iostream>
#include<vector>
using namespace std;

int main() {
    vector<vector<int> > array(4);
    for(int i=0;i<4;i++) {
        array[i].resize(5);
    }
    //输出二维数组的行和列 
    cout<<"Row:"<<array.size()<<"  Column:"<<array[0].size()<<endl;
    //输出二维数组 
    cout<<"["<<endl;
    for(int j=0;j<array.size();j++) {
        cout<<"["<<" ";
        for(int k=0;k<array[0].size();k++) {
            cout<<array[j][k]<<" ";
        }
        cout<<"]"<<endl;
    }
    cout<<"]"<<endl;
    return 0;
} 


# <2>

创建一个m*n的整型二维数组：

vector<int> temp(n);     //先创建一个含有n个元素的一维数组     
vector<vector<int>> matrix(m,temp); //再根据m个含有n个元素的一维数组构成二维数组

测试代码：

#include<iostream>
#include<vector>
using namespace std;

int main() {
    //创建一个4*5的二维数组
    vector<int> temp(5);
    vector<vector<int> > matrix(4,temp);
    cout<<"row:"<<matrix.size()<<endl;
    cout<<"column:"<<matrix[0].size()<<endl;
    cout<<"["<<endl;
    for(int i=0;i<matrix.size();++i) {
        cout<<"["<<" ";
        for(int j=0;j<matrix[0].size();++j) {
            cout<<matrix[i][j]<<" ";
        }
        cout<<"]"<<endl;
    }
    cout<<"]"<<endl;
    return 0;
}
